START -> prog 

aParams -> expr rept-aParams1 
aParams -> EPSILON 

aParamsTail -> ',' expr 

addOp -> '+' 
addOp -> '-' 
addOp -> 'or' 

afterExpr -> relExpr 
afterExpr -> EPSILON 

afterFuncDecl -> type ';' 
afterFuncDecl -> 'void' ';' 

afterFuncHead -> type 
afterFuncHead -> 'void' 

afterIdnest -> rept-idnest0 
afterIdnest -> indice variable 
afterIdnest -> functionCall 

afterMemberDecl -> varDecl 
afterMemberDecl -> funcDecl 

afterStatment -> assignStat ';' 
afterStatment -> ';' 

arithExpr -> term rightrec-arithExpr 

arraySize -> '[' arraySizeValue ']' 

arraySizeValue -> 'intNum' 
arraySizeValue -> EPSILON 

assignOp -> '=' 

assignStat -> assignOp expr 

before-varDeclNotId -> typeInt 
before-varDeclNotId -> typeFloat 

classDecl -> 'class' 'id' opt-classDecl2 '{' rept-classDecl4 '}' ';' 

expr -> arithExpr afterExpr 

fParams -> type 'id' rept-fParams2 rept-fParams3 
fParams -> EPSILON 

fParamsTail -> ',' type 'id' rept-fParamsTail3 

factor -> idnest0
factor -> 'intNum' 
factor -> 'floatNum' 
factor -> '(' arithExpr ')' 
factor -> 'not' factor 
factor -> sign factor 

funcBody -> opt-funcBody0 'do' rept-funcBody2 'end' 

funcDecl -> '(' fParams ')' ':' afterFuncDecl 

funcDef -> funcHead funcBody ';' 

funcHead -> 'id' opt-funcHead0 '(' fParams ')' ':' afterFuncHead 

functionCall -> '(' aParams ')' 

idnest0 -> 'id' afterIdnest 

idnest2 -> variable 
idnest2 -> functionCall 

indice -> '[' arithExpr ']' 

memberDecl -> 'id' afterMemberDecl 
memberDecl -> before-varDeclNotId varDecl 

multOp -> '*' 
multOp -> '/' 
multOp -> 'and' 

opt-classDecl2 -> 'inherits' 'id' rept-opt-classDecl22 
opt-classDecl2 -> EPSILON 

opt-funcBody0 -> 'local' rept-opt-funcBody01 
opt-funcBody0 -> EPSILON 

opt-funcHead0 -> 'coloncolon' 'id' 
opt-funcHead0 -> EPSILON 

prog -> rept-prog0 rept-prog1 'main' funcBody 

relExpr -> relOp arithExpr 

relOp -> 'eq' 
relOp -> 'neq' 
relOp -> 'lt' 
relOp -> 'gt' 
relOp -> 'leq' 
relOp -> 'geq' 

rept-aParams1 -> aParamsTail rept-aParams1 
rept-aParams1 -> EPSILON 

rept-classDecl4 -> visibility memberDecl rept-classDecl4 
rept-classDecl4 -> EPSILON 

rept-fParams2 -> arraySize rept-fParams2 
rept-fParams2 -> EPSILON 

rept-fParams3 -> fParamsTail rept-fParams3 
rept-fParams3 -> EPSILON 

rept-fParamsTail3 -> arraySize rept-fParamsTail3 
rept-fParamsTail3 -> EPSILON 

rept-funcBody2 -> statement rept-funcBody2 
rept-funcBody2 -> EPSILON 

rept-idnest0 -> '.' 'id' idnest2 
rept-idnest0 -> EPSILON 

rept-opt-classDecl22 -> ',' 'id' rept-opt-classDecl22 
rept-opt-classDecl22 -> EPSILON 

rept-opt-funcBody01 -> before-varDeclNotId varDecl rept-opt-funcBody01 
rept-opt-funcBody01 -> 'id' varDecl rept-opt-funcBody01 
rept-opt-funcBody01 -> EPSILON 

rept-prog0 -> classDecl rept-prog0 
rept-prog0 -> EPSILON 

rept-prog1 -> funcDef rept-prog1 
rept-prog1 -> EPSILON 

rept-statBlock1 -> statement rept-statBlock1 
rept-statBlock1 -> EPSILON 

rept-varDecl2 -> arraySize rept-varDecl2 
rept-varDecl2 -> EPSILON 

rept-variable2 -> indice rept-variable2 
rept-variable2 -> EPSILON 

rightrec-arithExpr -> EPSILON 
rightrec-arithExpr -> addOp term rightrec-arithExpr 

rightrec-term -> EPSILON 
rightrec-term -> multOp factor rightrec-term 

sign -> '+' 
sign -> '-' 

statBlock -> 'do' rept-statBlock1 'end' 
statBlock -> statement 
statBlock -> EPSILON 

statement -> idnest0 afterStatment 
statement -> 'if' '(' arithExpr relExpr ')' 'then' statBlock 'else' statBlock ';' 
statement -> 'while' '(' arithExpr relExpr ')' statBlock ';' 
statement -> 'read' '(' idnest0 ')' ';' 
statement -> 'write' '(' expr ')' ';' 
statement -> 'return' '(' expr ')' ';' 

term -> factor rightrec-term 

type -> typeInt 
type -> typeFloat 
type -> typeId 

typeFloat -> 'float' 

typeId -> 'id' 

typeInt -> 'integer' 

varDecl -> 'id' rept-varDecl2 ';' 

variable -> rept-variable2 

visibility -> 'public' 
visibility -> 'private' 


